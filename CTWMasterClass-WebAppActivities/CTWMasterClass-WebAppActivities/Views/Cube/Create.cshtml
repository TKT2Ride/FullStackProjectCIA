@model CTWMasterClass_WebAppActivities.Models.Cube

@{
    ViewBag.Title = "Create";
}

<h2>Create Cube</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="background">
            <div class="row">
                <div class="col-sm-3">
                    <img src="~/Images/BarrelLogo.jpg" width="35%" />
                </div>
                <div class="col-sm-6 col-sm-offset-1">
                    <h1 class="header">CIA Cube Tracking</h1>
                </div>
            </div>
            <hr />
            <br />
            <br />
            <div class="row">
                <div class="col-sm-3"></div>
                <div class="col-sm-6" align="center">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.SideLength, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SideLength, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SideLength, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConstructionMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConstructionMaterial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConstructionMaterial, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Contents, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CurrentLocation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CurrentLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12" align="center">
                        <input type="submit" value="Create" class="buttonFormatting" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12" align="center">

                    @Html.ActionLink("Go back to List", "Index", null, new { @class = "buttonFormatting" })
                </div>
            </div>

        </div>
    </div>
}